@article{10.1145/3340544,
author = {Tufano, Michele and Watson, Cody and Bavota, Gabriele and Penta, Massimiliano Di and White, Martin and Poshyvanyk, Denys},
title = {An Empirical Study on Learning Bug-Fixing Patches in the Wild via Neural Machine Translation},
year = {2019},
issue_date = {October 2019},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {28},
number = {4},
issn = {1049-331X},
url = {https://doi.org/10.1145/3340544},
doi = {10.1145/3340544},
abstract = {Millions of open source projects with numerous bug fixes are available in code repositories. This proliferation of software development histories can be leveraged to learn how to fix common programming bugs. To explore such a potential, we perform an empirical study to assess the feasibility of using Neural Machine Translation techniques for learning bug-fixing patches for real defects. First, we mine millions of bug-fixes from the change histories of projects hosted on GitHub in order to extract meaningful examples of such bug-fixes. Next, we abstract the buggy and corresponding fixed code, and use them to train an Encoder-Decoder model able to translate buggy code into its fixed version. In our empirical investigation, we found that such a model is able to fix thousands of unique buggy methods in the wild. Overall, this model is capable of predicting fixed patches generated by developers in 9--50\% of the cases, depending on the number of candidate patches we allow it to generate. Also, the model is able to emulate a variety of different Abstract Syntax Tree operations and generate candidate patches in a split second.},
journal = {ACM Trans. Softw. Eng. Methodol.},
month = {sep},
articleno = {19},
numpages = {29},
keywords = {Neural machine translation, bug-fixes}
}

@INPROCEEDINGS{7882014,
  author={Osman, Haidar and Ghafari, Mohammad and Nierstrasz, Oscar},
  booktitle={2017 IEEE Workshop on Machine Learning Techniques for Software Quality Evaluation (MaLTeSQuE)},
  title={Hyperparameter optimization to improve bug prediction accuracy},
  year={2017},
  volume={},
  number={},
  publisher = {IEEE},
  pages={33-38},
  keywords={Computer bugs;Tuning;Predictive models;Support vector machines;Measurement;Machine learning algorithms;Object oriented modeling;Hyperparameter Optimization;Bug Prediction;Machine Learning;Model Selection},
  doi={10.1109/MALTESQUE.2017.7882014}}


@INPROCEEDINGS{6227210,
  author={Zhou, Jian and Zhang, Hongyu and Lo, David},
  booktitle={2012 34th International Conference on Software Engineering (ICSE)},
  title={Where should the bugs be fixed? More accurate information retrieval-based bug localization based on bug reports},
  year={2012},
  volume={},
  number={},
  pages={14-24},
  keywords={Computer bugs;Vectors;Mathematical model;Equations;Information retrieval;Indexing;Computational modeling;bug localization;information retrieval;feature location;bug reports},
  doi={10.1109/ICSE.2012.6227210}}


 @ARTICLE{9684433,
  author={Sarhan, Qusay Idrees and Beszédes, Árpád},
  journal={IEEE Access},
  title={A Survey of Challenges in Spectrum-Based Software Fault Localization},
  year={2022},
  volume={10},
  number={},
  pages={10618-10639},
  keywords={Codes;Location awareness;Software testing;Software systems;Systematics;Probability;Fault diagnosis;Program spectra;spectrum based fault localization;software testing;challenges and issues;survey},
  doi={10.1109/ACCESS.2022.3144079}}


@INPROCEEDINGS{7789399,
  author={Yu, Xiao and Liu, Jin and Yang, Zijiang James and Liu, Xiao and Yin, Xiaofei and Yi, Shijie},
  booktitle={2016 IEEE International Symposium on Software Reliability Engineering Workshops (ISSREW)},
  title={Bayesian Network Based Program Dependence Graph for Fault Localization},
  year={2016},
  volume={},
  number={},
  pages={181-188},
  keywords={Bayes methods;Probabilistic logic;Microwave integrated circuits;Cognition;Mutual information;Graphical models;Probability distribution;Fault localization;Bayesian Network;Program Analysis},
  doi={10.1109/ISSREW.2016.35}}


@INPROCEEDINGS{8009915,
  author={Keller, Fabian and Grunske, Lars and Heiden, Simon and Filieri, Antonio and van Hoorn, Andre and Lo, David},
  booktitle={2017 IEEE International Conference on Software Quality, Reliability and Security (QRS)},
  title={A Critical Evaluation of Spectrum-Based Fault Localization Techniques on a Large-Scale Software System},
  year={2017},
  volume={},
  number={},
  pages={114-125},
  keywords={Measurement;Computer bugs;Benchmark testing;Software systems;Electronic mail;Fault location;Debugging},
  doi={10.1109/QRS.2017.22}}

@inproceedings{Johnson2020SoftwareFL,
  title={Software Fault Localisation via Probabilistic Modelling},
  author={Colin G. Johnson},
  booktitle={SGAI Conferences},
  year={2020},
  url={https://api.semanticscholar.org/CorpusID:228077718}
}

@INPROCEEDINGS{9793888,
  author={Zeng, Muhan and Wu, Yiqian and Ye, Zhentao and Xiong, Yingfei and Zhang, Xin and Zhang, Lu},
  booktitle={2022 IEEE/ACM 44th International Conference on Software Engineering (ICSE)},
  title={Fault Localization via Efficient Probabilistic Modeling of Program Semantics},
  year={2022},
  volume={},
  number={},
  pages={958-969},
  keywords={Location awareness;Analytical models;Scalability;Semantics;Static analysis;Debugging;Probabilistic logic;fault localization;semantics;probabilistic modeling},
  doi={10.1145/3510003.3510073}
  }

@ARTICLE{7390282,
  author={Wong, W. Eric and Gao, Ruizhi and Li, Yihao and Abreu, Rui and Wotawa, Franz},
  journal={IEEE Transactions on Software Engineering},
  title={A Survey on Software Fault Localization},
  year={2016},
  volume={42},
  number={8},
  pages={707-740},
  keywords={Debugging;Software engineering;Computer bugs;Software debugging;Fault diagnosis;Complexity theory;Software fault localization;program debugging;software testing;execution trace;suspicious code;survey},
  doi={10.1109/TSE.2016.2521368}}


@ARTICLE{6035728,
  author={Le Goues, Claire and Nguyen, ThanhVu and Forrest, Stephanie and Weimer, Westley},
  journal={IEEE Transactions on Software Engineering},
  title={GenProg: A Generic Method for Automatic Software Repair},
  year={2012},
  volume={38},
  number={1},
  pages={54-72},
  keywords={Maintenance engineering;Encoding;Computer bugs;Automatic programming;Debugging;Syntactics;Automatic programming;corrections;testing and debugging.},
  doi={10.1109/TSE.2011.104}}


@ARTICLE{9684433,
  author={Sarhan, Qusay Idrees and Beszédes, Árpád},
  journal={IEEE Access},
  title={A Survey of Challenges in Spectrum-Based Software Fault Localization},
  year={2022},
  volume={10},
  number={},
  pages={10618-10639},
  keywords={Codes;Location awareness;Software testing;Software systems;Systematics;Probability;Fault diagnosis;Program spectra;spectrum based fault localization;software testing;challenges and issues;survey},
  doi={10.1109/ACCESS.2022.3144079}}
